#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="proMana")]
public partial class proManaDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertmember(member instance);
  partial void Updatemember(member instance);
  partial void Deletemember(member instance);
  #endregion
	
	public proManaDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["proManaConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public proManaDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public proManaDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public proManaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public proManaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<member> member
	{
		get
		{
			return this.GetTable<member>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.member")]
public partial class member : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _email;
	
	private string _phoneNum;
	
	private string _passwd;
	
	private string _name;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneNumChanging(string value);
    partial void OnphoneNumChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
	
	public member()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNum", DbType="NChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string phoneNum
	{
		get
		{
			return this._phoneNum;
		}
		set
		{
			if ((this._phoneNum != value))
			{
				this.OnphoneNumChanging(value);
				this.SendPropertyChanging();
				this._phoneNum = value;
				this.SendPropertyChanged("phoneNum");
				this.OnphoneNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="NChar(18) NOT NULL", CanBeNull=false)]
	public string passwd
	{
		get
		{
			return this._passwd;
		}
		set
		{
			if ((this._passwd != value))
			{
				this.OnpasswdChanging(value);
				this.SendPropertyChanging();
				this._passwd = value;
				this.SendPropertyChanged("passwd");
				this.OnpasswdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
